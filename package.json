{
	"name": "nebulis-analytics-server",
	"private": true,
	"version": "0.0.1",
	"description": "Nebulis provides realtime analytics and reporting for coding projects. With Nebulis you can embed an endpoint into your coding units so that you can gather code changes to a project fork. Nebulis is set up to be close to zero configuration, so as soon as the endpoint is launched on a fork, that user will be instantly registered into the system and attached to the associated project.",
	"keywords": [],
	"dependencies": {
		"bcrypt-nodejs": "0.0.3",
		"body-parser": "^1.15.2",
		"chai": "^3.5.0",
		"coveralls": "^2.13.1",
		"ejs": "2.3.4",
		"enzyme": "^2.9.1",
		"es6-promise": "^4.0.5",
		"express": "^4.14.0",
		"express-async-wrap": "^1.0.0",
		"express-ejs-layouts": "^2.2.0",
		"ghoulie": "^0.0.2",
		"ghoulies": "0.0.2",
		"git-server": "chrisdobler/NodeJS-Git-Server",
		"grunt": "1.0.1",
		"grunt-contrib-clean": "1.0.0",
		"grunt-contrib-coffee": "1.0.0",
		"grunt-contrib-concat": "1.0.1",
		"grunt-contrib-copy": "1.0.0",
		"grunt-contrib-cssmin": "1.0.1",
		"grunt-contrib-jst": "1.0.0",
		"grunt-contrib-less": "1.3.0",
		"grunt-contrib-uglify": "1.0.1",
		"grunt-contrib-watch": "1.0.0",
		"grunt-sails-linker": "~0.10.1",
		"grunt-sync": "0.5.2",
		"include-all": "^1.0.0",
		"isomorphic-fetch": "^2.2.1",
		"istanbul": "^0.4.5",
		"jsdom": "^9.9.1",
		"jsonwebtoken": "^7.4.1",
		"material-ui": "^0.16.1",
		"mdi-material-ui": "^1.0.0",
		"minimatch": "^3.0.4",
		"mocha": "^3.5.0",
		"nodegit": "^0.18.3",
		"nyc": "^11.1.0",
		"passport": "^0.3.2",
		"passport-github2": "^0.1.10",
		"passport-jwt": "^2.2.1",
		"rc": "1.0.1",
		"react": "^15.4.0",
		"react-dom": "^15.4.0",
		"react-hot-loader": "^3.0.0-beta.6",
		"react-router": "^3.0.0",
		"react-tap-event-plugin": "^2.0.1",
		"redux": "^3.6.0",
		"redux-immutable-state-invariant": "^2.0.0",
		"redux-thunk": "^2.1.0",
		"request-promise": "^4.2.1",
		"respawn": "^2.5.0",
		"rimraf": "^2.6.1",
		"sails": "~0.12.9",
		"sails-disk": "~0.10.9",
		"yarn": "^0.27.5",
		"zip-folder": "^1.0.0"
	},
	"devDependencies": {
		"babel-cli": "^6.18.0",
		"babel-core": "^6.18.2",
		"babel-eslint": "^7.1.0",
		"babel-loader": "^6.2.7",
		"babel-preset-es2015": "^6.18.0",
		"babel-preset-react": "^6.16.0",
		"babel-preset-stage-0": "^6.16.0",
		"chai": "^3.2.0",
		"chai-http": "^1.0.0",
		"css-loader": "^0.25.0",
		"eslint": "^4.3.0",
		"eslint-config-airbnb": "^15.1.0",
		"eslint-plugin-import": "^2.7.0",
		"eslint-plugin-jsx-a11y": "^5.1.1",
		"eslint-plugin-react": "^7.1.0",
		"jsdom": "^9.8.3",
		"node-sass": "^4.5.3",
		"nodemon": "^1.11.0",
		"react-addons-test-utils": "^15.4.0",
		"react-test-renderer": "^15.4.0",
		"sass-loader": "^6.0.6",
		"style-loader": "^0.13.1",
		"webpack": "^2.1.0-beta.25",
		"webpack-dev-middleware": "^1.8.4",
		"webpack-hot-middleware": "^2.10.0"
	},
	"scripts": {
		"debug": "NODE_ENV=dev node debug app.js",
		"gitnet:dev": "nodemon --watch ./nebugit gitnetLifter.js",
		"gitnet:prod": "node gitnetLifter.js",
		"dev": "NODE_ENV=dev npm run build:dev & npm run server:dev & npm run gitnet:dev",
		"prod": "NODE_ENV=dev npm run build:prod; npm run server:prod & yarn run gitnet:prod",
		"server:dev": "NODE_ENV=dev nodemon --ignore 'src/*.*' --ignore 'public/build/*.*' --ignore ./nebugit --ignore ./test ./node_modules/sails/bin/sails.js lift",
		"server:prod": "NODE_ENV=prod node app.js",
		"build:dev": "NODE_ENV=dev node node_modules/webpack/bin/webpack.js --progress",
		"build:prod": "NODE_ENV=prod node node_modules/webpack/bin/webpack.js -p --optimize-minimize",
		"test:server": "NODE_ENV=test nyc mocha --recursive ./test/server/config.js ./test/server",
		"test:endpoint": "NODE_ENV=test nyc mocha --recursive --timeout 10000 ./test/endpoint/config.js ./test/endpoint/tests",
		"test:server:watch": "NODE_ENV=test nodemon -w ./api -w ./test/server -e js -x mocha --recursive ./test/server/config.js ./test/server",
		"test:client": "NODE_ENV=test nyc mocha --recursive --compilers js:babel-core/register ./test/client/config.js ./test/client",
		"test:client:watch": "NODE_ENV=test nodemon -w ./src -w ./test/client -e js -x mocha --recursive --compilers js:babel-core/register ./test/client/config.js ./test/client",
		"ghoulies": "npm run ghoulies:build; npm run ghoulies:test",
		"ghoulies:test": "NODE_ENV=test mocha --timeout 60000 --recursive ./test/ghoulies/config.js ./test/ghoulies",
		"ghoulies:watch": "npm run ghoulies:build; NODE_ENV=test nodemon -w ./test/ghoulies -e js -x npm run ghoulies:test",
		"ghoulies:build": "NODE_ENV=test node node_modules/webpack/bin/webpack.js -p --progress"
	},
	"main": "app.js",
	"repository": {
		"type": "git",
		"url": ""
	},
	"author": "jaxcore",
	"license": ""
}
